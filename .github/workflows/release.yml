name: Release Package

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Release Package
      run: |
        mkdir txt_to_mp3_release
        xcopy /E /I txt_mp3_python txt_to_mp3_release\txt_mp3_python
        copy app.py txt_to_mp3_release\
        copy novel_process.py txt_to_mp3_release\
        copy tts_process.py txt_to_mp3_release\
        copy win_run.bat txt_to_mp3_release\
        copy requirements.txt txt_to_mp3_release\
        copy README.md txt_to_mp3_release\
        copy LICENSE txt_to_mp3_release\
        copy VERSION txt_to_mp3_release\
        xcopy /E /I data txt_to_mp3_release\data
        powershell Compress-Archive -Path txt_to_mp3_release\* -DestinationPath ${{ github.ref_name }}_win_x64_一键包.zip
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ github.ref_name }}_win_x64_一键包.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/txt_to_mp3:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/txt_to_mp3:${{ github.ref_name }}