name: Release Package

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Release Package
      run: |
        # 创建发布目录
        mkdir -Force txt_to_mp3_release
        
        # 复制主要文件
        copy app.py txt_to_mp3_release\
        copy novel_process.py txt_to_mp3_release\
        copy tts_process.py txt_to_mp3_release\
        copy merge_process.py txt_to_mp3_release\
        copy video_process_async.py txt_to_mp3_release\
        copy requirements.txt txt_to_mp3_release\
        copy README.md txt_to_mp3_release\
        copy LICENSE txt_to_mp3_release\
        copy VERSION txt_to_mp3_release\
        copy SECURITY.md txt_to_mp3_release\
        
        # 创建数据目录结构
        mkdir -Force txt_to_mp3_release\data
        mkdir -Force txt_to_mp3_release\data\config
        
        # 复制配置文件
        copy data\config\config.json txt_to_mp3_release\data\config\config.json
        
        # 复制 ffmpeg
        xcopy /E /I ffmpeg txt_to_mp3_release\ffmpeg
        
        # 创建压缩包
        powershell Compress-Archive -Path txt_to_mp3_release\* -DestinationPath ${{ github.ref_name }}_win_x64_一键包.zip -Force
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ github.ref_name }}_win_x64_一键包.zip
        body: |
          ## 更新内容
          1. 优化视频合成速度：
            - 使用 VP9 视频编码器
            - 启用恒定质量模式（CRF）
            - 直接复制音频流，不重新编码
            - 优化帧率设置为 1fps
          2. 支持显卡加速：
            - 支持 NVIDIA 显卡加速
            - 支持 Intel 显卡加速
            - 支持 AMD 显卡加速
          3. 其他优化：
            - 改进错误处理和日志记录
            - 优化项目结构
            - 完善文档说明
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/txt_to_mp3:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/txt_to_mp3:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: type=docker,dest=/tmp/docker_image.tar

    - name: Compress Docker image
      run: |
        gzip -c /tmp/docker_image.tar > docker_img_${{ github.ref_name }}.tar.gz
        
    - name: Upload Docker image to release
      uses: softprops/action-gh-release@v1
      with:
        files: docker_img_${{ github.ref_name }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}