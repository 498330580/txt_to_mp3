name: Release Package

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Release Package
      run: |
        # 创建发布目录
        mkdir txt_to_mp3_release
        
        # 复制主要文件
        xcopy /E /I txt_mp3_python txt_to_mp3_release\txt_mp3_python
        copy app.py txt_to_mp3_release\
        copy novel_process.py txt_to_mp3_release\
        copy tts_process.py txt_to_mp3_release\
        copy merge_process.py txt_to_mp3_release\
        copy video_process.py txt_to_mp3_release\
        copy video_process_async.py txt_to_mp3_release\
        copy requirements.txt txt_to_mp3_release\
        copy README.md txt_to_mp3_release\
        copy LICENSE txt_to_mp3_release\
        copy VERSION txt_to_mp3_release\
        copy SECURITY.md txt_to_mp3_release\
        
        # 复制数据目录结构
        xcopy /E /I data txt_to_mp3_release\data
        
        # 复制 ffmpeg
        xcopy /E /I ffmpeg txt_to_mp3_release\ffmpeg
        
        # 创建压缩包
        powershell Compress-Archive -Path txt_to_mp3_release\* -DestinationPath ${{ github.ref_name }}_win_x64_一键包.zip -Force
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ github.ref_name }}_win_x64_一键包.zip
        body: |
          ## 更新内容
          - 优化音频合并功能，支持临时目录处理
          - 改进文件打包结构，包含所有必要文件
          - 完善错误处理和日志记录
          - 优化视频生成功能
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/txt_to_mp3:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/txt_to_mp3:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max